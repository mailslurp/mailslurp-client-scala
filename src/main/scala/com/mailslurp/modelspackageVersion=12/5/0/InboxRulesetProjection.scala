/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mailslurp.modelspackageVersion&#x3D;12.5.0

import java.util.UUID

  /**
   * InboxRulesetProjection
   * Representation of an inbox ruleset
   */
case class InboxRulesetProjection(
  action: InboxRulesetProjectionEnums.Action,
  handler: InboxRulesetProjectionEnums.Handler,
  id: UUID,
  inboxId: UUID,
  scope: InboxRulesetProjectionEnums.Scope,
  target: String
)

object InboxRulesetProjectionEnums {

  type Action = Action.Value
  type Handler = Handler.Value
  type Scope = Scope.Value
  object Action extends Enumeration {
    val BLOCK = Value("BLOCK")
    val ALLOW = Value("ALLOW")
    val FORWARD = Value("FORWARD")
  }

  object Handler extends Enumeration {
    val EXCEPTION = Value("EXCEPTION")
  }

  object Scope extends Enumeration {
    val RECEIVINGEMAILS = Value("RECEIVING_EMAILS")
    val SENDINGEMAILS = Value("SENDING_EMAILS")
  }

}

