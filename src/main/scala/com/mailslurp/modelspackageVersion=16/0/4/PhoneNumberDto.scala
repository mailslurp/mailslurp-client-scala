/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mailslurp.modelspackageVersion&#x3D;16.0.4

import java.time.OffsetDateTime
import java.util.UUID

case class PhoneNumberDto(
  id: UUID,
  name: Option[String] = None,
  description: Option[String] = None,
  userId: UUID,
  complianceAddress: Option[UUID] = None,
  emergencyAddress: Option[UUID] = None,
  phoneNumber: String,
  phoneCountry: PhoneNumberDtoEnums.PhoneCountry,
  phonePlan: UUID,
  createdAt: OffsetDateTime,
  updatedAt: OffsetDateTime,
  favourite: Boolean
)

object PhoneNumberDtoEnums {

  type PhoneCountry = PhoneCountry.Value
  object PhoneCountry extends Enumeration {
    val US = Value("US")
    val GB = Value("GB")
    val AU = Value("AU")
    val CA = Value("CA")
    val EE = Value("EE")
    val HK = Value("HK")
    val PL = Value("PL")
    val CH = Value("CH")
    val PT = Value("PT")
    val NL = Value("NL")
    val IL = Value("IL")
    val SE = Value("SE")
  }

}

