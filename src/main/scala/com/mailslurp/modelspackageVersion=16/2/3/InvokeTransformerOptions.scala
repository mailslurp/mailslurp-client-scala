/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mailslurp.modelspackageVersion&#x3D;16.2.3

import java.util.UUID

case class InvokeTransformerOptions(
  aiTransformId: Option[UUID] = None,
  aiTransformMappingId: Option[UUID] = None,
  rawInput: Option[String] = None,
  entityId: Option[String] = None,
  entityType: Option[InvokeTransformerOptionsEnums.EntityType] = None,
  rawConditions: Option[Seq[String]] = None,
  rawInstructions: Option[Seq[String]] = None,
  rawOutputSchema: Option[StructuredOutputSchema] = None,
  contentSelector: Option[InvokeTransformerOptionsEnums.ContentSelector] = None
)

object InvokeTransformerOptionsEnums {

  type EntityType = EntityType.Value
  type ContentSelector = ContentSelector.Value
  object EntityType extends Enumeration {
    val EMAIL = Value("EMAIL")
    val SMS = Value("SMS")
    val ATTACHMENT = Value("ATTACHMENT")
  }

  object ContentSelector extends Enumeration {
    val RAW = Value("RAW")
    val BODY = Value("BODY")
    val BODYATTACHMENTS = Value("BODY_ATTACHMENTS")
  }

}

