/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mailslurp.modelspackageVersion&#x3D;15.20.0

import java.time.OffsetDateTime
import java.util.UUID

  /**
   * ConnectorEventProjection
   */
case class ConnectorEventProjection(
  createdAt: OffsetDateTime,
  eventType: ConnectorEventProjectionEnums.EventType,
  connectorId: UUID,
  seen: Option[Boolean] = None,
  message: Option[String] = None,
  id: Option[UUID] = None,
  size: Long,
  status: ConnectorEventProjectionEnums.Status
)

object ConnectorEventProjectionEnums {

  type EventType = EventType.Value
  type Status = Status.Value
  object EventType extends Enumeration {
    val SEND = Value("SEND")
    val SYNC = Value("SYNC")
  }

  object Status extends Enumeration {
    val SUCCESS = Value("SUCCESS")
    val INTERNALERROR = Value("INTERNAL_ERROR")
    val SUBSCRIPTIONERROR = Value("SUBSCRIPTION_ERROR")
    val CONNECTIONERROR = Value("CONNECTION_ERROR")
    val NOTFOUND = Value("NOT_FOUND")
  }

}

